{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./trials/items.csv","webpack:///./src/App.vue?fe82","webpack:///src/App.vue","webpack:///./src/App.vue?d83e","webpack:///./src/App.vue","webpack:///./src/magpie.config.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_c","_self","attrs","_v","on","$event","prepareData","$magpie","nextScreen","_l","trial","staticStyle","_s","getPreviousResponse","measurements","response","$set","saveAndNextScreen","trialNR","itemNr","itemName","condition","measure","getChoice","_e","staticRenderFns","log","items","computed","methods","output","trialData","socket","variant","chain","generation","guessingTrials","shuffle","filter","addExpData","seedTrigger","lastIterationResults","filteredData","extractedRow","component","experimentId","serverUrl","socketUrl","completionUrl","contactEmail","language","config","productionTip","use","prefix","h","App","$mount"],"mappings":"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","file":"js/app.827c2f7b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-1335a3e6\":\"1a98bf3c\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/magpie3-causal-implicature/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = [{\"itemNr\":1,\"itemName\":\"spaceColony\",\"condition\":\"association\",\"context\":\"You are leading a group of colonists to a far away planet called Xelifan-3. To survive on Xelifan-3, the colonists need constant supply of the seeds of a plant called xeliherb, which grows sparsely and only on Xelifan-3. You will need to cultivate xeliherb to ensure survival of the colonists. Your science team have explored the planet and found that ... \",\"criticalSentence\":\"... a high yield of xeliherb is associated with the presence of another plant called ralocrop.\",\"furtherContext\":\"However, the cultivation of ralocrop is costly (water, energy resources).\",\"taskQuestion\":\"Based on the evidence reported by your science team, would you decide to cultivate both xeliherb and ralocrop on the fields available to your colony for agriculture, or would you only cultivate xeliherb?\"},{\"itemNr\":1,\"itemName\":\"spaceColony\",\"condition\":\"intervention\",\"context\":\"You are leading a group of colonists to a far away planet called Xelifan-3. To survive on Xelifan-3, the colonists need constant supply of the seeds of a plant called xeliherb, which grows sparsely and only on Xelifan-3. You will need to cultivate xeliherb to ensure survival of the colonists. Your science team have explored the planet and found that ... \",\"criticalSentence\":\"... a high yield of xeliherb was obtained whenever another plant called ralocrop was cultivated as well.\",\"furtherContext\":\"However, the cultivation of ralocrop is costly (water, energy resources).\",\"taskQuestion\":\"Based on the evidence reported by your science team, would you decide to cultivate both xeliherb and ralocrop on the fields available to your colony for agriculture, or would you only cultivate xeliherb?\"},{\"itemNr\":1,\"itemName\":\"spaceColony\",\"condition\":\"commonCause\",\"context\":\"You are leading a group of colonists to a far away planet called Xelifan-3. To survive on Xelifan-3, the colonists need constant supply of the seeds of a plant called xeliherb, which grows sparsely and only on Xelifan-3. You will need to cultivate xeliherb to ensure survival of the colonists. Your science team have explored the planet and found that ... \",\"criticalSentence\":\"... a high yield of xeliherb is associated with the presence of another plant called ralocrop. But they also found that ralocrop only grows on particularly fertile grounds.\",\"furtherContext\":\"However, the cultivation of ralocrop is costly (water, energy resources).\",\"taskQuestion\":\"Based on the evidence reported by your science team, would you decide to cultivate both xeliherb and ralocrop on the fields available to your colony for agriculture, or would you only cultivate xeliherb?\"},{\"itemNr\":1,\"itemName\":\"spaceColony\",\"condition\":\"deniedCausation\",\"context\":\"You are leading a group of colonists to a far away planet called Xelifan-3. To survive on Xelifan-3, the colonists need constant supply of the seeds of a plant called xeliherb, which grows sparsely and only on Xelifan-3. You will need to cultivate xeliherb to ensure survival of the colonists. Your science team have explored the planet and found that ... \",\"criticalSentence\":\"... a high yield of xeliherb is associated with the presence of another plant called ralocrop. But there is no evidence that the cultivation of ralocrop causes a better yield of xeliherb.\",\"furtherContext\":\"However, the cultivation of ralocrop is costly (water, energy resources).\",\"taskQuestion\":\"Based on the evidence reported by your science team, would you decide to cultivate both xeliherb and ralocrop on the fields available to your colony for agriculture, or would you only cultivate xeliherb?\"}]","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Experiment',{attrs:{\"title\":\"Decision-making experiment\"}},[_c('InstructionScreen',{attrs:{\"title\":'Welcome'}},[_vm._v(\" In this short experiment you will first read a description about a fictitious context in which you are supposed to make an decision based on some information you received from others. Please read the context information very carefully and make your decision deliberately. \"),_c('p'),_vm._v(\" After your choice, we will ask you to explain your choice in a few words. \")]),_c('ConnectInteractiveScreen',{attrs:{\"title\":'Connecting...'}}),_c('AwaitIteratedResultScreen',{attrs:{\"title\":'Waiting for previous participant to finish'}}),_c('Wait',{attrs:{\"time\":0},on:{\"done\":function($event){_vm.prepareData();_vm.$magpie.nextScreen()}}}),_vm._l((_vm.items),function(trial,i){return [_c('Screen',{key:i},[_c('Slide',[_c('h2',[_c('strong',[_vm._v(\"Context\")])]),_c('p',[_vm._v(\"You are leading a group of colonists to a far away planet called Xelifan-3. The information you received from Mission Control when you departed months ago is this:\")]),_c('div',{staticStyle:{\"background-color\":\"#FF9999\"}},[_c('strong',[_vm._v(\"Information from Mission Control:\")]),_vm._v(\" \"),_c('br'),_vm._v(\" Two plants grow exclusively on Xelifan-3. They are called xeliherb and ralocrop. To survive on Xelifan-3, you need constant supply of the seeds of xeliherb. The cultivation of ralocrop is costly (water, energy resources).\")]),_c('p',[_vm._v(\"On arrival to Xelifan-3 you find a message left by earlier colonists. Here is what the message says:\")]),_c('div',{staticStyle:{\"background-color\":\"#AAAAFF\"}},[_c('strong',[_vm._v(\"Message from earlier colonists:\")]),_c('br'),_vm._v(\" \"+_vm._s(_vm.getPreviousResponse())+\" \")]),_c('p',[_c('strong',[_vm._v(\"Question:\")]),_vm._v(\" Based on the information provided by Mission Control and the earlier colonists, will you cultivate both xeliherb and ralocrop on the fields available to your colony, or will you only cultivate xeliherb?\")]),_c('ForcedChoiceInput',{attrs:{\"response\":_vm.$magpie.measurements.response,\"options\":['both xeliherb and ralocrop', 'only xeliherb']},on:{\"update:response\":[function($event){return _vm.$set(_vm.$magpie.measurements, \"response\", $event)},function($event){return _vm.$magpie.saveAndNextScreen()}]}}),_c('Record',{attrs:{\"data\":{\n              trialNR: i,\n              itemNr: trial.itemNr,\n              itemName: trial.itemName,\n              condition: trial.condition,\n              measure: 'choice'\n            }}})],1)],1),_c('Screen',{key:i},[_c('Slide',[_c('p',[_vm._v(\" Please give a short explanation for why you chose to cultivate \"+_vm._s(_vm.getChoice())+\"! \")]),_c('TextareaInput',{attrs:{\"response\":_vm.$magpie.measurements.response},on:{\"update:response\":function($event){return _vm.$set(_vm.$magpie.measurements, \"response\", $event)}}}),(\n              _vm.$magpie.measurements.response\n            )?_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen()}}},[_vm._v(\" Submit \")]):_vm._e(),_c('Record',{attrs:{\"data\":{\n                   trialNR: i+1,\n                   itemNr: trial.itemNr,\n                   itemName: trial.itemName,\n                   condition: trial.condition,\n                   measure: 'justification'\n            }}})],1)],1),_c('Screen',{key:i},[_c('Slide',[_c('h2',[_c('strong',[_vm._v(\"Oh, no! Abort mission immediately!\")])]),_c('p',[_vm._v(\" Due to atmospheric conditions and technical problems you are forced to leave Xelifan-3 in a rush. You should make sure that the information you received from the earlier colonists is not lost to whoever may come next. \"),_c('strong',[_vm._v(\"Please write down what you learned about the relation between ralocrop and xeliherb!\")])]),_c('TextareaInput',{attrs:{\"response\":_vm.$magpie.measurements.response},on:{\"update:response\":function($event){return _vm.$set(_vm.$magpie.measurements, \"response\", $event)}}}),_c('p',[_vm._v(\" For clarity, you do NOT have to repeat the information received from Mission Control, which is repeated below for your convenience. Only reproduce the message you received from the earlier colonists. \")]),_c('div',{staticStyle:{\"background-color\":\"#FF9999\"}},[_c('strong',[_vm._v(\"Information from Mission Control:\")]),_vm._v(\" \"),_c('br'),_vm._v(\" Two plants grow exclusively on Xelifan-3. They are called xeliherb and ralocrop. To survive on Xelifan-3, you need constant supply of the seeds of xeliherb. The cultivation of ralocrop is costly (water, energy resources).\")]),(\n              _vm.$magpie.measurements.response\n            )?_c('button',{on:{\"click\":function($event){return _vm.$magpie.saveAndNextScreen()}}},[_vm._v(\" Submit \")]):_vm._e(),_c('Record',{attrs:{\"data\":{\n                   trialNR: i+2,\n                   itemNr: trial.itemNr,\n                   itemName: trial.itemName,\n                   condition: trial.condition,\n                   measure: 'reproduction'\n            }}})],1)],1)]}),_c('PostTestScreen'),_c('SubmitResultsScreen')],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<Experiment title=\"Decision-making experiment\">\n  <InstructionScreen :title=\"'Welcome'\">\n    In this short experiment you will first read a description about a\n    fictitious context in which you are supposed to make an decision based on\n    some information you received from others. Please read the context\n    information very carefully and make your decision deliberately.\n    <p></p>\n    After your choice, we will ask you to explain your choice in a few words.\n  </InstructionScreen>\n\n    <ConnectInteractiveScreen :title=\"'Connecting...'\"></ConnectInteractiveScreen>\n    <AwaitIteratedResultScreen :title=\"'Waiting for previous participant to finish'\">\n    </AwaitIteratedResultScreen>\n    <Wait :time=\"0\" @done=\"prepareData();$magpie.nextScreen()\" />\n\n  <template v-for=\"(trial, i) of items\">\n    <Screen :key=\"i\">\n      <Slide>\n        <h2><strong>Context</strong></h2>\n\n        <p>You are leading a group of colonists to a far away planet called Xelifan-3. The information you received from Mission Control when you departed months ago is this:</p>\n\n        <div style=\"background-color:#FF9999\"><strong>Information from Mission Control:</strong> <br> Two plants grow exclusively on Xelifan-3. They are called xeliherb and ralocrop. To survive on Xelifan-3, you need constant supply of the seeds of xeliherb. The cultivation of ralocrop is costly (water, energy resources).</div>\n\n          <p>On arrival to Xelifan-3 you find a message left by earlier colonists. Here is what the message says:</p>\n\n          <div style=\"background-color:#AAAAFF\">\n            <strong>Message from earlier colonists:</strong>\n            <br>\n            {{ getPreviousResponse() }}\n          </div>\n\n          <p><strong>Question:</strong> Based on the information provided by Mission Control and the earlier colonists, will you cultivate both xeliherb and ralocrop on the fields available to your colony, or will you only cultivate xeliherb?</p>\n          <ForcedChoiceInput\n            :response.sync=\"$magpie.measurements.response\"\n            :options=\"['both xeliherb and ralocrop', 'only xeliherb']\"\n            @update:response=\"$magpie.saveAndNextScreen()\"\n          />\n          <Record\n            :data=\"{\n              trialNR: i,\n              itemNr: trial.itemNr,\n              itemName: trial.itemName,\n              condition: trial.condition,\n              measure: 'choice'\n            }\"\n          />\n        </Slide>\n      </Screen>\n\n      <Screen :key=\"i\">\n        <Slide>\n          <p>\n            Please give a short explanation for why you chose to cultivate\n            {{ getChoice() }}!\n          </p>\n          <!-- <p style=\"color: grey\"> -->\n          <!--   (You need to enter at least 20 characters of text to proceed.) -->\n          <!-- </p> -->\n          <TextareaInput :response.sync=\"$magpie.measurements.response\" />\n          <button\n            v-if=\"\n              $magpie.measurements.response\n            \"\n            @click=\"$magpie.saveAndNextScreen()\"\n          >\n            Submit\n          </button>\n          <Record\n            :data=\"{\n                   trialNR: i+1,\n                   itemNr: trial.itemNr,\n                   itemName: trial.itemName,\n                   condition: trial.condition,\n                   measure: 'justification'\n            }\"\n          />\n        </Slide>\n      </Screen>\n\n      <Screen :key=\"i\">\n        <Slide>\n          <h2><strong>Oh, no! Abort mission immediately!</strong></h2>\n          <p>\n            Due to atmospheric conditions and technical problems you are forced to leave Xelifan-3 in a rush.\n            You should make sure that the information you received from the earlier colonists is not lost to whoever may come next.\n            <strong>Please write down what you learned about the relation between ralocrop and xeliherb!</strong>\n          </p>\n          <!-- <p style=\"color: grey\"> -->\n          <!--   (You need to enter at least 20 characters of text to proceed.) -->\n          <!-- </p> -->\n          <TextareaInput :response.sync=\"$magpie.measurements.response\" />\n\n          <p>\n          For clarity, you do NOT have to repeat the information received from Mission Control, which is repeated below for your convenience.\n          Only reproduce the message you received from the earlier colonists.\n          </p>\n\n        <div style=\"background-color:#FF9999\"><strong>Information from Mission Control:</strong> <br> Two plants grow exclusively on Xelifan-3. They are called xeliherb and ralocrop. To survive on Xelifan-3, you need constant supply of the seeds of xeliherb. The cultivation of ralocrop is costly (water, energy resources).</div>\n\n          <button\n            v-if=\"\n              $magpie.measurements.response\n            \"\n            @click=\"$magpie.saveAndNextScreen()\"\n          >\n            Submit\n          </button>\n\n          <Record\n            :data=\"{\n                   trialNR: i+2,\n                   itemNr: trial.itemNr,\n                   itemName: trial.itemName,\n                   condition: trial.condition,\n                   measure: 'reproduction'\n            }\"\n          />\n        </Slide>\n      </Screen>\n    </template>\n\n    <PostTestScreen />\n\n    <SubmitResultsScreen />\n\n  </Experiment>\n</template>\n\n<script>\nimport items from '../trials/items.csv';\nimport _ from 'lodash';\n\nconsole.log(\"Hi, I'm Pilot 02c, currently living in root!\")\n\nexport default {\n  name: 'App',\n  data() {\n    // return { items: _.shuffle(items).slice(0, 1) };\n    return { items: items.slice(0, 1) };\n  },\n  computed: {\n    // Expose lodash to template code\n    _() {\n      return _;\n    }\n  },\n  methods: {\n    getChoice: function () {\n      // we need index 4 here because this is the 4th trial in the experiment overall!?\n      var output = this.$magpie.trialData[4] == null? null : this.$magpie.trialData[4][0].response;\n      return (output);\n\n    },\n    prepareData: function(){\n      console.log(\"variant: \", this.$magpie.socket.variant)\n      console.log(\"chain: \", this.$magpie.socket.chain)\n      console.log(\"generation: \", this.$magpie.socket.generation)\n      var variant = this.$magpie.socket.variant\n      this.guessingTrials = _.shuffle(_.filter(this.guessingTrials, {'variant' : variant}))\n      this.$magpie.addExpData({'variant': this.$magpie.socket.variant,\n                               'generation': this.$magpie.socket.generation,\n                               'chain': this.$magpie.socket.chain,\n                               'triggerMessage' : this.getPreviousResponse()})\n    },\n    getPreviousResponse: function(){\n\n      // which generation is this\n      var generation = this.$magpie.socket.generation;\n\n      var seedTrigger = \"A high yield of xeliherb is associated with the presence of ralocrop.\"\n\n      var output = seedTrigger\n\n      // if we are in the first generation, we will return the defaultGuess for the item\n      if (generation > 1) {\n\n         // get information about the results from the last iteration from the socket\n         var lastIterationResults = this.$magpie.socket.lastIterationResults;\n\n         // before initialization with ConnectInteractiveScreen, lastIterationResults will be 'null'\n         // so we make sure that there is some output\n         // if we are neither first-generation in the chain, nor have an empty socket,\n         // we can return the previous input for the current item\n\n         var filteredData = _.filter(lastIterationResults, function(o) {return o.measure == 'reproduction'})\n         var extractedRow = filteredData[0]\n         // console.log(filteredData)\n         // console.log(extractedRow)\n         output = extractedRow == null ? null : extractedRow.response\n         output = output == \"\" ? seedTrigger : output\n      }\n\n      return( output )\n    }\n  }\n};\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=03cbf013&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default {\n  experimentId: '3',\n  serverUrl: 'https://magpie-temp.herokuapp.com/',\n  socketUrl: 'wss://magpie-temp.herokuapp.com/socket',  // this will be used in prolific mode\n  completionUrl: 'https://app.prolific.co/submissions/complete?cc=C13NOKGZ',\n  contactEmail: 'mchfranke@gmail.com',\n  // Either 'debug', 'directLink' or 'prolific'\n  mode: 'prolific',\n  language: 'en'\n};\n","import Vue from 'vue';\nimport VueKonva from 'vue-konva';\nimport VueMagpie from 'magpie-base';\nimport App from './App.vue';\nimport magpieConfig from './magpie.config.js';\n\nVue.config.productionTip = false;\n\n// Load Konva components\nVue.use(VueKonva, { prefix: 'Canvas' });\n\n// Load magpie components\nVue.use(VueMagpie, magpieConfig);\n\n// start app\nnew Vue({\n  render: (h) => h(App)\n}).$mount('#app');\n"],"sourceRoot":""}